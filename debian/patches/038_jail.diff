--- a/usr.sbin/jail/command.c
+++ b/usr.sbin/jail/command.c
@@ -39,7 +39,6 @@
 #include <errno.h>
 #include <fcntl.h>
 #include <kvm.h>
-#include <login_cap.h>
 #include <paths.h>
 #include <pwd.h>
 #include <signal.h>
@@ -48,6 +47,16 @@
 #include <string.h>
 #include <unistd.h>
 
+#include <sys/syscall.h>
+
+typedef void login_cap_t;
+
+static inline int
+setfib(int fib)
+{
+  return syscall (SYS_setfib, fib);
+}
+
 #include "jailp.h"
 
 #define DEFAULT_STOP_TIMEOUT	10
@@ -589,14 +598,6 @@
 			if (term != NULL)
 				setenv("TERM", term, 1);
 		}
-		if (setusercontext(lcap, pwd, pwd->pw_uid, username
-		    ? LOGIN_SETALL & ~LOGIN_SETGROUP & ~LOGIN_SETLOGIN
-		    : LOGIN_SETPATH | LOGIN_SETENV) < 0) {
-			jail_warnx(j, "setusercontext %s: %s", pwd->pw_name,
-			    strerror(errno));
-			exit(1);
-		}
-		login_close(lcap);
 		setenv("USER", pwd->pw_name, 1);
 		setenv("HOME", pwd->pw_dir, 1);
 		setenv("SHELL",
@@ -769,12 +770,6 @@
 			jail_warnx(j, "unknown uid %d", getuid());
 		return -1;
 	}
-	*lcapp = login_getpwclass(pwd);
-	if (*lcapp == NULL) {
-		jail_warnx(j, "getpwclass %s: %s", pwd->pw_name,
-		    strerror(errno));
-		return -1;
-	}
 	/* Set the groups while the group file is still available */
 	if (initgroups(pwd->pw_name, pwd->pw_gid) < 0) {
 		jail_warnx(j, "initgroups %s: %s", pwd->pw_name,
